// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check codebases coverage-fail - eslint should give expected output 1`] = `
"
./example.js
  0:0  error  Expected coverage to be at least 50%, but is: 0%  flowtype-errors/enforce-min-coverage

✖ 1 problem (1 error, 0 warnings)

"
`;

exports[`Check codebases coverage-fail2 - eslint should give expected output 1`] = `
"
./example.js
  0:0  error  Expected coverage to be at least 50%, but is: 33.33%  flowtype-errors/enforce-min-coverage

✖ 1 problem (1 error, 0 warnings)

"
`;

exports[`Check codebases coverage-ok - eslint should give expected output 1`] = `""`;

exports[`Check codebases coverage-ok2 - eslint should give expected output 1`] = `""`;

exports[`Check codebases flow-pragma-1 - eslint should give expected output 1`] = `
"
./example.js
   4:10  error  string:  This type is incompatible with the expected return type of 'boolean'. See line 3  flowtype-errors/show-errors
   7:6   error  identifier \`x\`:  Could not resolve name                                                    flowtype-errors/show-errors
  14:14  error  string:  The operand of an arithmetic operation must be a number                           flowtype-errors/show-errors

✖ 3 problems (3 errors, 0 warnings)

"
`;

exports[`Check codebases flow-pragma-2 - eslint should give expected output 1`] = `
"
./example.js
   6:10  error  string:  This type is incompatible with the expected return type of 'boolean'. See line 5  flowtype-errors/show-errors
   9:6   error  identifier \`x\`:  Could not resolve name                                                    flowtype-errors/show-errors
  16:14  error  string:  The operand of an arithmetic operation must be a number                           flowtype-errors/show-errors

✖ 3 problems (3 errors, 0 warnings)

"
`;

exports[`Check codebases folder with spaces - eslint should give expected output 1`] = `""`;

exports[`Check codebases no-flow-pragma - eslint should give expected output 1`] = `""`;

exports[`Check codebases project-1 - eslint should give expected output 1`] = `
"
./1.example.js
   5:10  error  string:  This type is incompatible with the expected return type of 'boolean'. See line 4  flowtype-errors/show-errors
   8:6   error  identifier \`x\`:  Could not resolve name                                                    flowtype-errors/show-errors
  15:14  error  string:  The operand of an arithmetic operation must be a number                           flowtype-errors/show-errors

./2.example.js
   8:24  error  parameter \`x\`:  Missing annotation       flowtype-errors/show-errors
  12:6   error  identifier \`x\`:  Could not resolve name  flowtype-errors/show-errors

./3.example.js
   9:10  error  string:  This type is incompatible with the expected return type of 'number'. See line 8   flowtype-errors/show-errors
  13:10  error  string:  This type is incompatible with the expected return type of 'number'. See line 12  flowtype-errors/show-errors
  16:19  error  string:  This type is incompatible with 'number'. See line 16                              flowtype-errors/show-errors
  18:7   error  who:  name is already bound 'function who'. See line 12                                    flowtype-errors/show-errors
  20:5   error  function expects no arguments:                                                             flowtype-errors/show-errors
  20:11  error  function:  This type cannot be added to 'number'. See line 20                              flowtype-errors/show-errors

./4.example.js
  27:12  error  Property \`firstName\` is incompatible:  'string'. See line 27. This type is incompatible with 'object type'. See line 7  flowtype-errors/show-errors
  27:12  error  Property \`lastName\` is incompatible:   See line 11. Property not found in 'props of React element \`Foo\`'. See line 27   flowtype-errors/show-errors

./5.example.js
  8:3  error  string:  This type is incompatible with the expected param type of 'number'. See line 4  flowtype-errors/show-errors

./6.example.js
   8:5  error  number:  This type is incompatible with the expected param type of 'object type'. See line 4       flowtype-errors/show-errors
  10:5  error  Property \`baz\` is incompatible:   See line 4. Property not found in 'object literal'. See line 10  flowtype-errors/show-errors

./7.example.js
  6:3  error  string:  This type is incompatible with the expected param type of 'number'. See ./5.example.js:4  flowtype-errors/show-errors

./8.example.js
  6:5  error  number:  This type is incompatible with the expected param type of 'object type'. See ./6.example.js:4      flowtype-errors/show-errors
  8:5  error  Property \`baz\` is incompatible:   See ./6.example.js:4. Property not found in 'object literal'. See line 8  flowtype-errors/show-errors

./9.example.js
  8:17  error  Property \`name\` is incompatible:   See ./9.example.import.js:6. Property not found in 'props of React element \`Hello\`'. See line 8                  flowtype-errors/show-errors
  8:28  error  null:  This type is incompatible with the expected param type of 'Element'. See https://github.com/facebook/flow/blob/v0.57.3/lib/react-dom.js#L17  flowtype-errors/show-errors

✖ 21 problems (21 errors, 0 warnings)

"
`;

exports[`Check codebases run-all - eslint should give expected output 1`] = `
"
./example.js
   2:10  error  string:  This type is incompatible with the expected return type of 'boolean'. See line 1  flowtype-errors/show-errors
   5:6   error  identifier \`x\`:  Could not resolve name                                                    flowtype-errors/show-errors
  12:14  error  string:  The operand of an arithmetic operation must be a number                           flowtype-errors/show-errors

✖ 3 problems (3 errors, 0 warnings)

"
`;

exports[`Check codebases run-all-flowdir - eslint should give expected output 1`] = `
"
./subdir/example.js
   2:10  error  string:  This type is incompatible with the expected return type of 'boolean'. See line 1  flowtype-errors/show-errors
   5:6   error  identifier \`x\`:  Could not resolve name                                                    flowtype-errors/show-errors
  12:14  error  string:  The operand of an arithmetic operation must be a number                           flowtype-errors/show-errors

✖ 3 problems (3 errors, 0 warnings)

"
`;

exports[`Format 1.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 6,
    "loc": Object {
      "end": Object {
        "column": 17,
        "line": 6,
        "offset": 91,
      },
      "start": Object {
        "column": 10,
        "line": 6,
        "offset": 83,
      },
    },
    "message": "string:  This type is incompatible with the expected return type of 'boolean'. See line 5",
    "start": 6,
    "type": "default",
  },
  Object {
    "end": 9,
    "loc": Object {
      "end": Object {
        "column": 6,
        "line": 9,
        "offset": 102,
      },
      "start": Object {
        "column": 6,
        "line": 9,
        "offset": 101,
      },
    },
    "message": "identifier \`x\`:  Could not resolve name",
    "start": 9,
    "type": "default",
  },
  Object {
    "end": 16,
    "loc": Object {
      "end": Object {
        "column": 16,
        "line": 16,
        "offset": 208,
      },
      "start": Object {
        "column": 14,
        "line": 16,
        "offset": 205,
      },
    },
    "message": "string:  The operand of an arithmetic operation must be a number",
    "start": 16,
    "type": "default",
  },
]
`;

exports[`Format 2.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 9,
    "loc": Object {
      "end": Object {
        "column": 24,
        "line": 9,
        "offset": 96,
      },
      "start": Object {
        "column": 24,
        "line": 9,
        "offset": 95,
      },
    },
    "message": "parameter \`x\`:  Missing annotation",
    "start": 9,
    "type": "missing-annotation",
  },
  Object {
    "end": 13,
    "loc": Object {
      "end": Object {
        "column": 6,
        "line": 13,
        "offset": 121,
      },
      "start": Object {
        "column": 6,
        "line": 13,
        "offset": 120,
      },
    },
    "message": "identifier \`x\`:  Could not resolve name",
    "start": 13,
    "type": "default",
  },
]
`;

exports[`Format 3.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 10,
    "loc": Object {
      "end": Object {
        "column": 20,
        "line": 10,
        "offset": 145,
      },
      "start": Object {
        "column": 10,
        "line": 10,
        "offset": 134,
      },
    },
    "message": "string:  This type is incompatible with the expected return type of 'number'. See line 9",
    "start": 10,
    "type": "default",
  },
  Object {
    "end": 14,
    "loc": Object {
      "end": Object {
        "column": 13,
        "line": 14,
        "offset": 207,
      },
      "start": Object {
        "column": 10,
        "line": 14,
        "offset": 203,
      },
    },
    "message": "string:  This type is incompatible with the expected return type of 'number'. See line 13",
    "start": 14,
    "type": "default",
  },
  Object {
    "end": 17,
    "loc": Object {
      "end": Object {
        "column": 32,
        "line": 17,
        "offset": 244,
      },
      "start": Object {
        "column": 19,
        "line": 17,
        "offset": 230,
      },
    },
    "message": "string:  This type is incompatible with 'number'. See line 17",
    "start": 17,
    "type": "default",
  },
  Object {
    "end": 19,
    "loc": Object {
      "end": Object {
        "column": 9,
        "line": 19,
        "offset": 256,
      },
      "start": Object {
        "column": 7,
        "line": 19,
        "offset": 253,
      },
    },
    "message": "who:  name is already bound 'function who'. See line 13",
    "start": 19,
    "type": "default",
  },
  Object {
    "end": 21,
    "loc": Object {
      "end": Object {
        "column": 13,
        "line": 21,
        "offset": 277,
      },
      "start": Object {
        "column": 5,
        "line": 21,
        "offset": 268,
      },
    },
    "message": "function expects no arguments: ",
    "start": 21,
    "type": "default",
  },
  Object {
    "end": 21,
    "loc": Object {
      "end": Object {
        "column": 13,
        "line": 21,
        "offset": 277,
      },
      "start": Object {
        "column": 11,
        "line": 21,
        "offset": 274,
      },
    },
    "message": "function:  This type cannot be added to 'number'. See line 21",
    "start": 21,
    "type": "default",
  },
]
`;

exports[`Format 4.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 28,
    "loc": Object {
      "end": Object {
        "column": 35,
        "line": 28,
        "offset": 451,
      },
      "start": Object {
        "column": 12,
        "line": 28,
        "offset": 427,
      },
    },
    "message": "Property \`firstName\` is incompatible:  'string'. See line 28. This type is incompatible with 'object type'. See line 8",
    "start": 28,
    "type": "default",
  },
  Object {
    "end": 28,
    "loc": Object {
      "end": Object {
        "column": 35,
        "line": 28,
        "offset": 451,
      },
      "start": Object {
        "column": 12,
        "line": 28,
        "offset": 427,
      },
    },
    "message": "Property \`lastName\` is incompatible:   See line 12. Property not found in 'props of React element \`Foo\`'. See line 28",
    "start": 28,
    "type": "default",
  },
]
`;

exports[`Format 5.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 9,
    "loc": Object {
      "end": Object {
        "column": 5,
        "line": 9,
        "offset": 93,
      },
      "start": Object {
        "column": 3,
        "line": 9,
        "offset": 90,
      },
    },
    "message": "string:  This type is incompatible with the expected param type of 'number'. See line 5",
    "start": 9,
    "type": "default",
  },
]
`;

exports[`Format 6.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 9,
    "loc": Object {
      "end": Object {
        "column": 8,
        "line": 9,
        "offset": 113,
      },
      "start": Object {
        "column": 5,
        "line": 9,
        "offset": 109,
      },
    },
    "message": "number:  This type is incompatible with the expected param type of 'object type'. See line 5",
    "start": 9,
    "type": "default",
  },
  Object {
    "end": 11,
    "loc": Object {
      "end": Object {
        "column": 18,
        "line": 11,
        "offset": 135,
      },
      "start": Object {
        "column": 5,
        "line": 11,
        "offset": 121,
      },
    },
    "message": "Property \`baz\` is incompatible:   See line 5. Property not found in 'object literal'. See line 11",
    "start": 11,
    "type": "default",
  },
]
`;

exports[`Format 7.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 7,
    "loc": Object {
      "end": Object {
        "column": 5,
        "line": 7,
        "offset": 80,
      },
      "start": Object {
        "column": 3,
        "line": 7,
        "offset": 77,
      },
    },
    "message": "string:  This type is incompatible with the expected param type of 'number'. See ./5.example.js:5",
    "start": 7,
    "type": "default",
  },
]
`;

exports[`Format 8.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 7,
    "loc": Object {
      "end": Object {
        "column": 8,
        "line": 7,
        "offset": 85,
      },
      "start": Object {
        "column": 5,
        "line": 7,
        "offset": 81,
      },
    },
    "message": "number:  This type is incompatible with the expected param type of 'object type'. See ./6.example.js:5",
    "start": 7,
    "type": "default",
  },
  Object {
    "end": 9,
    "loc": Object {
      "end": Object {
        "column": 18,
        "line": 9,
        "offset": 107,
      },
      "start": Object {
        "column": 5,
        "line": 9,
        "offset": 93,
      },
    },
    "message": "Property \`baz\` is incompatible:   See ./6.example.js:5. Property not found in 'object literal'. See line 9",
    "start": 9,
    "type": "default",
  },
]
`;

exports[`Format 9.example.js - should have expected properties 1`] = `
Array [
  Object {
    "end": 9,
    "loc": Object {
      "end": Object {
        "column": 25,
        "line": 9,
        "offset": 168,
      },
      "start": Object {
        "column": 17,
        "line": 9,
        "offset": 159,
      },
    },
    "message": "Property \`name\` is incompatible:   See ./9.example.import.js:7. Property not found in 'props of React element \`Hello\`'. See line 9",
    "start": 9,
    "type": "default",
  },
  Object {
    "end": 9,
    "loc": Object {
      "end": Object {
        "column": 57,
        "line": 9,
        "offset": 200,
      },
      "start": Object {
        "column": 28,
        "line": 9,
        "offset": 170,
      },
    },
    "message": "null:  This type is incompatible with the expected param type of 'Element'. See https://github.com/facebook/flow/blob/v0.57.3/lib/react-dom.js#L17",
    "start": 9,
    "type": "default",
  },
]
`;
